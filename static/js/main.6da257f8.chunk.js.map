{"version":3,"sources":["context.js","components/events/Event.js","components/events/Events.js","components/layout/TextInputGroup.js","components/events/AddEvent.js","components/events/EditEvent.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","events","filter","event","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Event","showEventInfo","onDeleteClick","delete","t0","_this2","_this$props$event","name","address","number","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Events","Fragment","events_Event","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddEvent","errors","onSubmit","e","_this$state","newEvent","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditEvent","updEvent","match","params","put","adress","Header","branding","href","About","NotFound","test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Test","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6da257f8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_EVENT':\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event => event.id !== action.payload)\r\n            }\r\n\r\n        case 'ADD_EVENT':\r\n            return {\r\n                ...state,\r\n                events: [action.payload, ...state.events]\r\n            }\r\n\r\n        case 'UPDATE_EVENT':\r\n            return {\r\n                ...state,\r\n                events: state.events.map(event => event.id === action.payload.id ? (event = action.payload) : event)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        events: [\r\n\r\n        ],\r\n        dispatch: action =>\r\n            this.setState(state => reducer(state, action))\r\n\r\n    }\r\n    async componentDidMount() {\r\n        const res = await axios\r\n            .get('https://jsonplaceholder.typicode.com/users')\r\n        this.setState({\r\n            events: res.data\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        showEventInfo: false\r\n    };\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios\r\n                .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            dispatch({ type: 'DELETE_EVENT', payload: id })\r\n        } catch (e) {\r\n            dispatch({ type: 'DELETE_EVENT', payload: id })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { id, name, address, number } = this.props.event;\r\n        const { showEventInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name} <i onClick={() =>\r\n                                this.setState({\r\n                                    showEventInfo:\r\n                                        !this.state.showEventInfo\r\n                                })\r\n                            }\r\n                                className=\"fas fa-sort-down\"\r\n                                style={{ cursor: 'pointer' }}>\r\n                            </i>\r\n                                <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                                />\r\n\r\n                                <Link to={`event/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            marginRight: '1rem'\r\n                                        }}\r\n                                    ></i>\r\n                                </Link>\r\n\r\n                            </h4>\r\n                            {showEventInfo ? (<ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Address: {address}</li>\r\n                                <li className=\"list-group-item\">Number of Guests: {number}</li>\r\n                            </ul>) : null}\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nEvent.propTypes = {\r\n    event: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\nimport { Consumer } from '../../context';\r\nclass Events extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { events } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2 \">\r\n                                <span className=\"text-primary \">Event </span> List\r\n                            </h1>\r\n                            {events.map(event => (\r\n                                <Event\r\n                                    key={event.id}\r\n                                    event={event} />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Events;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg', { 'is-invalid': error })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error &&\r\n                <div className=\"invalid-feedback\">This is wrong</div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass AddEvent extends Component {\r\n    state = {\r\n        name: '',\r\n        address: '',\r\n        number: '',\r\n        errors: {}\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, address, number } = this.state;\r\n        // check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n        if (address === '') {\r\n            this.setState({ errors: { address: 'Address is required' } });\r\n            return;\r\n        }\r\n        if (number === '') {\r\n            this.setState({ errors: { number: 'Number is required' } });\r\n            return;\r\n        }\r\n        const newEvent = {\r\n            name,\r\n            address,\r\n            number\r\n        }\r\n\r\n        const res = await axios\r\n            .post('https://jsonplaceholder.typicode.com/users', newEvent)\r\n        dispatch({ type: 'ADD_EVENT', payload: res.data })\r\n\r\n\r\n\r\n        this.setState({\r\n            name: '',\r\n            address: '',\r\n            number: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        const { name, address, number, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Event</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Address\"\r\n                                        name=\"address\"\r\n                                        placeholder=\"Enter event address\"\r\n                                        value={address}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.address}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Phone Number\"\r\n                                        name=\"number\"\r\n                                        placeholder=\"Enter a phone number\"\r\n                                        value={number}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.number}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Add Event\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEvent;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass EditEvent extends Component {\r\n    state = {\r\n        name: '',\r\n        address: '',\r\n        number: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const event = res.data;\r\n\r\n        this.setState({\r\n            name: event.name,\r\n            address: event.adress,\r\n            number: event.number\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, address, number } = this.state;\r\n        // check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n        if (address === '') {\r\n            this.setState({ errors: { address: 'Address is required' } });\r\n            return;\r\n        }\r\n        if (number === '') {\r\n            this.setState({ errors: { number: 'Number is required' } });\r\n            return;\r\n        }\r\n\r\n        const updEvent = {\r\n            name,\r\n            address,\r\n            number\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updEvent);\r\n\r\n        dispatch({ type: 'UPDATE_EVENT', payload: res.data });\r\n\r\n\r\n\r\n        // clear the state\r\n        this.setState({\r\n            name: '',\r\n            address: '',\r\n            number: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        const { name, address, number, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Event</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Address\"\r\n                                        name=\"address\"\r\n                                        placeholder=\"Enter event address\"\r\n                                        value={address}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.address}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Phone Number\"\r\n                                        name=\"number\"\r\n                                        placeholder=\"Enter a phone number\"\r\n                                        value={number}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.number}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Update Event\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditEvent;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/event/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i> Add Event\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i>About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My app'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Event Manager</h1>\r\n            <p className=\"lead\">Simple app to manage events</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-primary\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            }));\r\n    }\r\n    // componentWillMount() {\r\n    //     console.log('componentWillMount...')\r\n    // }\r\n    // componenDidUpdate() {\r\n    //     console.log('componentDIdUpdate...')\r\n    // }\r\n    // componentWillReceiveProps(nextProps, state) {\r\n    //     console.log('componentWillReceiveProps.. ')\r\n    // }\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default test;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Events from './components/events/Events';\nimport AddEvent from './components/events/AddEvent';\nimport EditEvent from './components/events/EditEvent';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\" >\n            <Header branding=\"Event Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Events} />\n                <Route exact path=\"/event/add\" component={AddEvent} />\n                <Route exact path=\"/event/edit/:id\" component={EditEvent} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}